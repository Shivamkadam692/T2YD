<style>
    .suggest-container { position: relative; }
    .suggest-list { position: absolute; top: 100%; left: 0; right: 0; background: #fff; border: 1px solid #ddd; border-radius: 4px; box-shadow: 0 4px 14px rgba(0,0,0,.08); z-index: 1000; max-height: 260px; overflow: auto; margin-top: 4px; }
    .suggest-item { padding: 8px 10px; cursor: pointer; }
    .suggest-item:hover, .suggest-item.active { background: #f0f6ff; }
    .suggest-primary { font-weight: 600; color: #2c3e50; }
    .suggest-secondary { font-size: 12px; color: #697386; margin-top: 2px; }
    
    /* Mobile Responsive Styles */
    @media (max-width: 768px) {
      main { padding: 1rem; }
      .dashboard-header { text-align: center; margin-bottom: 1.5rem; }
      .dashboard-header h1 { font-size: 1.5rem; margin-bottom: 0.5rem; }
      .dashboard-header p { font-size: 0.9rem; }
      
      .form { max-width: 100%; }
      .form-group { margin-bottom: 1.2rem; }
      .form-group label { display: block; margin-bottom: 0.5rem; font-weight: 600; font-size: 0.95rem; }
      .form-group input, .form-group textarea { 
        width: 100%; 
        padding: 12px; 
        font-size: 16px; /* Prevents zoom on iOS */
        border-radius: 8px;
        border: 2px solid #e1e5e9;
      }
      .form-group input:focus, .form-group textarea:focus { 
        outline: none; 
        border-color: #3498db; 
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
      }
      
      .suggest-list { 
        max-height: 200px; 
        font-size: 14px;
        border-radius: 8px;
        margin-top: 2px;
      }
      .suggest-item { padding: 12px; }
      .suggest-primary { font-size: 14px; }
      .suggest-secondary { font-size: 11px; }
      
      .form-actions { 
        flex-direction: column; 
        gap: 0.8rem; 
        margin-top: 1.5rem;
      }
      .form-actions .btn { 
        width: 100%; 
        padding: 14px; 
        font-size: 16px;
        border-radius: 8px;
      }
    }
    
    @media (max-width: 480px) {
      main { padding: 0.8rem; }
      .dashboard-header h1 { font-size: 1.3rem; }
      .form-group input, .form-group textarea { padding: 14px; }
      .suggest-item { padding: 14px; }
    }
  </style>

<div class="dashboard-header">
  <h1><i class="fas fa-plus-circle"></i> Add New Delivery</h1>
  <p>Create a new delivery request for transporters to bid on.</p>
</div>

<form action="/deliveries/add" method="post" class="form">
  <div class="form-group">
    <label for="goodsType"><i class="fas fa-box"></i> Goods Type:</label>
    <input type="text" id="goodsType" name="goodsType" placeholder="e.g., Electronics, Furniture, Food" required>
  </div>
  
  <div class="form-group">
    <label for="weight"><i class="fas fa-weight-hanging"></i> Weight (kg):</label>
    <input type="number" id="weight" name="weight" placeholder="Enter weight in kg" required min="1">
  </div>
  
  <div class="form-group suggest-container">
    <label for="pickupLocation"><i class="fas fa-map-pin"></i> Pickup Location:</label>
    <input type="text" id="pickupLocation" name="pickupLocation" placeholder="e.g., Mumbai, Maharashtra" required>
    <div id="pickupLocation_suggest" class="suggest-list" style="display:none;"></div>
  </div>
  
  <div class="form-group suggest-container">
    <label for="dropLocation"><i class="fas fa-map-marker-alt"></i> Drop Location:</label>
    <input type="text" id="dropLocation" name="dropLocation" placeholder="e.g., Delhi, Delhi" required>
    <div id="dropLocation_suggest" class="suggest-list" style="display:none;"></div>
  </div>
  
  <div class="form-group">
    <label for="pickupDateTime"><i class="fas fa-calendar-alt"></i> Pickup Date and Time:</label>
    <input type="datetime-local" id="pickupDateTime" name="pickupDateTime" required>
  </div>
  
  <div class="form-group">
    <label for="expectedDeliveryDate"><i class="fas fa-clock"></i> Expected Delivery Date:</label>
    <input type="date" id="expectedDeliveryDate" name="expectedDeliveryDate" required>
  </div>
  
  <div class="form-group">
    <label for="contact">Contact Number:</label>
    <input type="tel" id="contact" name="contact" placeholder="Your contact number" required>
  </div>
  
  <div class="form-group">
    <label for="description">Description (Optional):</label>
    <textarea id="description" name="description" rows="3" placeholder="Additional details about the goods or special requirements..."></textarea>
  </div>
  
  <div class="form-actions">
    <button type="submit" class="btn btn-primary">Create Delivery</button>
    <a href="/dashboard/shipper" class="btn btn-secondary">Cancel</a>
  </div>
</form>
<script>
    (function(){
      const inputs = [
        { id: 'pickupLocation', listId: 'pickupLocation_suggest' },
        { id: 'dropLocation', listId: 'dropLocation_suggest' }
      ];

      function debounce(fn, wait){ let t; return (...args)=>{ clearTimeout(t); t=setTimeout(()=>fn(...args), wait); }; }

      function formatSecondary(addr){
        if (!addr) return '';
        const parts = [addr.road, addr.neighbourhood || addr.suburb, addr.city || addr.town || addr.village, addr.state];
        return parts.filter(Boolean).join(', ');
      }

      async function searchPlaces(q){
        const url = `https://nominatim.openstreetmap.org/search?format=json&addressdetails=1&limit=8&q=${encodeURIComponent(q)}`;
        const res = await fetch(url, { headers: { 'Accept': 'application/json' } });
        if (!res.ok) return [];
        const data = await res.json();
        return Array.isArray(data) ? data : [];
      }

      function attachAutocomplete({ id, listId }){
        const input = document.getElementById(id);
        const list = document.getElementById(listId);
        let activeIndex = -1; // keyboard navigation

        function close(){ list.style.display='none'; list.innerHTML=''; activeIndex=-1; }

        function open(){ list.style.display='block'; }

        function render(items){
          if (!items.length){ close(); return; }
          list.innerHTML = items.map((it, idx)=>{
            const secondary = formatSecondary(it.address);
            return `<div class="suggest-item${idx===activeIndex?' active':''}" data-idx="${idx}">
                      <div class="suggest-primary">${it.display_name}</div>
                      ${secondary?`<div class=\"suggest-secondary\">${secondary}</div>`:''}
                    </div>`;
          }).join('');
          open();
        }

        const doSearch = debounce(async () => {
          const q = input.value.trim();
          if (q.length < 3){ close(); return; }
          try {
            const results = await searchPlaces(q);
            render(results);
          } catch { /* noop */ }
        }, 300);

        input.addEventListener('input', doSearch);
        input.addEventListener('focus', doSearch);
        input.addEventListener('blur', () => setTimeout(close, 150));

        list.addEventListener('mousedown', (e)=>{
          const item = e.target.closest('.suggest-item');
          if (!item) return;
          const idx = Number(item.getAttribute('data-idx'));
          const nodes = Array.from(list.querySelectorAll('.suggest-item'));
          const chosen = nodes[idx];
          input.value = chosen.querySelector('.suggest-primary').textContent;
          close();
        });

        input.addEventListener('keydown', (e)=>{
          const items = Array.from(list.querySelectorAll('.suggest-item'));
          if (!items.length) return;
          if (e.key === 'ArrowDown') { e.preventDefault(); activeIndex = Math.min(activeIndex+1, items.length-1); render(items.map((_,i)=>({}))); }
          if (e.key === 'ArrowUp') { e.preventDefault(); activeIndex = Math.max(activeIndex-1, 0); render(items.map((_,i)=>({}))); }
          if (e.key === 'Enter') {
            e.preventDefault();
            if (activeIndex>=0 && items[activeIndex]){
              input.value = items[activeIndex].querySelector('.suggest-primary').textContent;
              close();
            }
          }
          if (e.key === 'Escape') { close(); }
        });
      }

      inputs.forEach(attachAutocomplete);
    })();
  </script>